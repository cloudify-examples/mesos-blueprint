tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.4/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.4/plugin.yaml

inputs:

  ####################################
  # INSTALL WORKFLOW INPUTS
  ####################################
  image:
    description: image   # prepared mesos image (see image generator)
    default: ''

  flavor:
    description: flavor
    default: ''
  agent_user:
    description: user for agents
    default: ubuntu

  ####################################
  # BUILD_IMAGE WORKFLOW INPUTS
  ####################################

node_templates:

  master_host:
    type: cloudify.openstack.nodes.Server
    properties:
      agent_config:
        user: {get_input: agent_user}
      image: {get_input: image}
      flavor: {get_input: flavor}
    relationships:
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: master_public_ip
      - type: cloudify.openstack.server_connected_to_security_group
        target: master_secgroup
    interfaces:
      cloudify.interfaces.monitoring_agent:
          install:
            implementation: diamond.diamond_agent.tasks.install
            inputs:
              diamond_config:
                interval: 2
          start: diamond.diamond_agent.tasks.start
          stop: diamond.diamond_agent.tasks.stop
          uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                CPUCollector: {}
                MemoryCollector: {}
                LoadAverageCollector: {}
                DiskUsageCollector:
                  config:
                    devices: x?vd[a-z]+[0-9]*$
                NetworkCollector: {}


  master_secgroup:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      resource_id: mesos_master_secgroup
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 5050

  master_public_ip:
    type: cloudify.openstack.nodes.FloatingIP

  slave_host:
    type: cloudify.openstack.nodes.Server
    properties:
      agent_config:
        user: {get_input: agent_user}
      image: {get_input: image}
      flavor: {get_input: flavor}
    relationships:
      - type: cloudify.openstack.server_connected_to_security_group
        target: slave_secgroup
    interfaces:
      cloudify.interfaces.monitoring_agent:
          install:
            implementation: diamond.diamond_agent.tasks.install
            inputs:
              diamond_config:
                interval: 2
          start: diamond.diamond_agent.tasks.start
          stop: diamond.diamond_agent.tasks.stop
          uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                CPUCollector: {}
                MemoryCollector: {}
                LoadAverageCollector: {}
                DiskUsageCollector:
                  config:
                    devices: x?vd[a-z]+[0-9]*$
                NetworkCollector: {}

  slave_secgroup:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      resource_id: mesos_slave_secgroup
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: 5051

outputs:
  mesos_ip:
    value: { get_attribute: [ master_public_ip, floating_ip_address ] }

  mesos_ui:
    value: { concat: ['http://', { get_attribute: [ master_public_ip, floating_ip_address ] }, ':5050']}

